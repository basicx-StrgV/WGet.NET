//--------------------------------------------------//
// Created by basicx-StrgV                          //
// https://github.com/basicx-StrgV/                 //
//--------------------------------------------------//
using System;
using WGetNET.Models;

namespace WGetNET
{
    /// <summary>
    /// Represents a winget execution result.
    /// </summary>
    public sealed class WinGetResult : IWinGetObject
    {
        /// <summary>
        /// Gets the exit code of the process.
        /// </summary>
        public int ExitCode
        {
            get
            {
                if (_processResult != null)
                {
                    return _processResult.ExitCode;
                }
                else
                {
                    return -1;
                }
            }
        }

        /// <summary>
        /// Gets the output of the process as a <see cref="System.String"/> array.
        /// </summary>
        /// <remarks>
        /// Each entry in the array contains a line from the output stream.
        /// </remarks>
        public string[] Output
        {
            get
            {
                if (_processResult != null)
                {
                    return _processResult.Output;
                }
                else
                {
                    return Array.Empty<string>();
                }
            }
        }

        /// <summary>
        /// Gets if the process finished successfully.
        /// </summary>
        public bool Success
        {
            get
            {
                if (_processResult != null)
                {
                    return _processResult.Success;
                }
                else
                {
                    return false;
                }
            }
        }

        /// <summary>
        /// Gets the cmd that was executed.
        /// </summary>
        public string ExecutedCmd
        {
            get
            {
                if (_arguments != null)
                {
                    return $"winget {_arguments.ToString()}";
                }
                else
                {
                    return string.Empty;
                }
            }
        }

        /// <inheritdoc/>
        public bool IsEmpty
        {
            get
            {
                return (_processResult == null);
            }
        }

        private readonly ProcessResult? _processResult = null;
        private readonly WinGetArguments? _arguments = null;

        /// <summary>
        /// Initializes a new instance of the <see cref="WGetNET.WinGetResult"/> class.
        /// </summary>
        /// <param name="processResult">
        /// The process result object generated by the <see cref="WGetNET.Components.Internal.ProcessManager"/>.
        /// </param>
        /// <param name="arguments">
        /// The <see cref="WGetNET.WinGetArguments"/> object containing the executed cmd.
        /// </param>
        internal WinGetResult(ProcessResult processResult, WinGetArguments? arguments)
        {
            _processResult = processResult;
            _arguments = arguments;
        }
    }
}
